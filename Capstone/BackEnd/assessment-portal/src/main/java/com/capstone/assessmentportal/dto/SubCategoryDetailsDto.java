package com.capstone.assessmentportal.dto;

import java.util.Objects;

import com.capstone.assessmentportal.response.ValidationMessage;

import jakarta.persistence.Column;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

/**
 *subcategory dto class.
*/

@Setter
@Getter
@NoArgsConstructor
@AllArgsConstructor
public class SubCategoryDetailsDto {
    /**
     * subcategory id autogenerated attribute.
    */
   @Id
   @GeneratedValue(strategy = GenerationType.AUTO)
   private Long subCategoryId;
  /**
   *subcategory name attribute.
  */
  @Column(nullable = false)
  @NotBlank(message = ValidationMessage.QUIZNAME_NOTBLANK)
  private String subCategoryName;
  /**
   *subcategory description attribute.
  */
  private String subCategoryDescription;
  /**
   *subcategory time limit in minutes for quiz attribute.
  */
  @Column(nullable = false)
  @NotBlank(message = ValidationMessage.TIMELIMIT_NOTBLANK)
  private String timeLimitInMinutes;
  /**
   *category Id attribute.
  */
  @Column(nullable = false)
  @NotNull(message = ValidationMessage.CATEGORY_NOTNULL)
  private Long categoryId;
  /**
   *hashcode method.
  */
  @Override
  public final int hashCode() {
    return Objects.hash(categoryId, subCategoryDescription,
            subCategoryId, subCategoryName, timeLimitInMinutes);
  }
  /**
   *equals method.
  */
  @Override
  public final boolean equals(final Object obj) {
    if (this == obj) {
        return true;
    }
    if (obj == null) {
        return false;
    }
    if (getClass() != obj.getClass()) {
        return false;
    }
    SubCategoryDetailsDto other = (SubCategoryDetailsDto) obj;
    return Objects.equals(categoryId, other.categoryId)
            && Objects.equals(subCategoryDescription,
                    other.subCategoryDescription)
            && Objects.equals(subCategoryId, other.subCategoryId)
            && Objects.equals(subCategoryName, other.subCategoryName)
            && Objects.equals(timeLimitInMinutes, other.timeLimitInMinutes);
  }
}
